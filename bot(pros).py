import telebot
from telebot import types
import time
import random
import sqlite3
import schedule
import threading
from datetime import datetime

TOKEN = '7039961825:AAGmyb-lFESj2INpi81JWQAV9kgZwPBtJSU'
bot = telebot.TeleBot(TOKEN)

# –°–ø–∏—Å–æ–∫ ID –∞–¥–º–∏–Ω–æ–≤
ADMINS = [6821884320]  # –£–∫–∞–∂–∏ —Ç—É—Ç ID –∞–¥–º–∏–Ω–æ–≤


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
def send_message_to_all_users(message):
    cursor.execute('SELECT chat_id FROM users')
    users = cursor.fetchall()
    for user in users:
        bot.send_message(user[0], message)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ FULL WORK!
def send_full_work():
    send_message_to_all_users("‚úÖ FULL WORK ‚úÖ")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ STOP WORK!
def send_stop_work():
    send_message_to_all_users("‚ùå STOP WORK ‚ùå")

# –ó–∞–ø–ª–∞–Ω–∏—Ä—É–µ–º –∑–∞–¥–∞—á–∏
schedule.every().day.at("05:00").do(send_full_work)
schedule.every().day.at("00:00").do(send_stop_work)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
def run_schedule():
    while True:
        schedule.run_pending()
        time.sleep(1)

# –ó–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
threading.Thread(target=run_schedule, daemon=True).start()

def get_work_status():
    current_time = datetime.now().time()
    print(f"–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: {current_time}")  # –î–æ–±–∞–≤—å —ç—Ç–æ—Ç –≤—ã–≤–æ–¥ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    if current_time >= datetime.strptime("05:00", "%H:%M").time() and current_time <= datetime.strptime("23:59", "%H:%M").time():
        return "‚úÖ FULL WORK ‚úÖ"
    else:
        return "‚ùå STOP WORK ‚ùå"



submitted_message_id = None


def reset_users():
    cursor.execute('DELETE FROM users')  # –£–¥–∞–ª—è–µ—Ç –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ —Ç–∞–±–ª–∏—Ü—ã
    conn.commit()




# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
def safe_delete_message(chat_id, message_id):
    try:
        bot.delete_message(chat_id, message_id)
    except Exception as e:
        print(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ {message_id} –≤ —á–∞—Ç–µ {chat_id}: {e}")




@bot.message_handler(content_types=['photo', 'video', 'audio', 'document', 'voice', 'animation', 'video_note', 'sticker'])
def get_photo(message):
    msg = bot.reply_to(message, '''<u><b><i>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –º—ã –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–∞–∫–∏–µ —Ñ–∞–π–ª—ã. üìÇ

–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã –∏–ª–∏ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è. –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–Ω–∏–º–∞–Ω–∏–µ!</i></b></u>''', parse_mode='html', reply_markup=create_main_menu())




# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö SQLite
conn = sqlite3.connect('user_data.db', check_same_thread=False)
cursor = conn.cursor()

def create_database():
    conn = sqlite3.connect('your_database.db')
    cursor = conn.cursor()

    # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É users, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS users (
            chat_id INTEGER PRIMARY KEY,
            name TEXT,
            age INTEGER,
            country TEXT,
            user_hash TEXT,
            referral_link TEXT,
            is_registered INTEGER DEFAULT 0
        )
    ''')

    conn.commit()
    conn.close()

# –ó–∞–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
create_database()

# –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ö—ç—à–∞
def generate_hash():
    return "#WLR" + str(random.randint(100000, 999999))

# –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏
def generate_referral_link(chat_id):
    return f"https://braggsz.github.io/Cinema/?ref={chat_id}"


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
def save_user_data(chat_id, name, age, country, user_hash, referral_link=None, is_registered=0):
    cursor.execute('''INSERT OR REPLACE INTO users (chat_id, name, age, country, user_hash, referral_link, is_registered)
                      VALUES (?, ?, ?, ?, ?, ?, ?)''', (chat_id, name, age, country, user_hash, referral_link, is_registered))
    conn.commit()


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
def get_user_data(chat_id):
    cursor.execute('SELECT * FROM users WHERE chat_id = ?', (chat_id,))
    return cursor.fetchone()

# –°—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
@bot.message_handler(commands=['start'])
def send_welcome(message):
    chat_id = message.chat.id
    user_info = get_user_data(chat_id)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    if user_info and user_info[5] == 1:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—å
        show_profile(chat_id)
    else:
        # –ï—Å–ª–∏ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, –∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        bot.send_message(chat_id, """–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤ –∫–æ–º–∞–Ω–¥–µ <b>Prime Team!</b> üëã""", parse_mode='HTML')
        bot.send_message(chat_id, '''<b>‚ö†Ô∏è –û—Ç–≤–µ—Ç –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω! ‚ö†Ô∏è</b>
                         
¬†<b>1Ô∏è‚É£ –ö–∞–∫ –í–∞—Å –∑–æ–≤—É—Ç?</b>   
                                               
<i>–î–ª—è –ø—Ä–æ–ø—É—Å–∫–∞ —ç—Ç–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç: " <code>Hoin.</code> "</i> ''', parse_mode='HTML')
        bot.register_next_step_handler(message, ask_name )

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–º–µ–Ω–∏
def ask_name(message):
    chat_id = message.chat.id
    name = message.text
    save_user_data(chat_id, name, None, None, None)
    bot.send_message(chat_id, '''<b>‚ö†Ô∏è –û—Ç–≤–µ—Ç –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω! ‚ö†Ô∏è</b>
                         
¬†<b>2Ô∏è‚É£ –°–∫–æ–ª—å–∫–æ –í–∞–º –ª–µ—Ç?</b>   
                                               
<i>–î–ª—è –ø—Ä–æ–ø—É—Å–∫–∞ —ç—Ç–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç: " <code>Hoin.</code> "</i> ''', parse_mode='HTML')
    bot.register_next_step_handler(message, ask_age)

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤–æ–∑—Ä–∞—Å—Ç–∞
def ask_age(message):
    chat_id = message.chat.id
    age = message.text
    cursor.execute('UPDATE users SET age = ? WHERE chat_id = ?', (age, chat_id))
    conn.commit()
    bot.send_message(chat_id, '''<b>‚ö†Ô∏è –û—Ç–≤–µ—Ç –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω! ‚ö†Ô∏è</b>
                         
¬†<b>3Ô∏è‚É£ –í –∫–∞–∫–æ–π —Å—Ç—Ä–∞–Ω–µ –í—ã –ø—Ä–æ–∂–∏–≤–∞–µ—Ç–µ?</b>   
                                               
<i>–î–ª—è –ø—Ä–æ–ø—É—Å–∫–∞ —ç—Ç–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç: " <code>Hoin.</code> "</i> ''' , parse_mode='HTML')
    bot.register_next_step_handler(message, ask_country)

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Ö—ç—à–∞
def ask_country(message):
    chat_id = message.chat.id
    country = message.text
    user_hash = generate_hash()
    referral_link = generate_referral_link(chat_id)  # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É
    cursor.execute('UPDATE users SET country = ?, user_hash = ?, referral_link = ? WHERE chat_id = ?', 
                   (country, user_hash, referral_link, chat_id))
    conn.commit()
    bot.send_message(chat_id, '''<b>üí¨ –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –Ω–∞–º –æ —Å–µ–±–µ:</b>

¬†
<b>‚óâ –ì–¥–µ –í—ã —Ä–∞–±–æ—Ç–∞–ª–∏? üè¢</b>
<b>‚óâ –ö–∞–∫ –¥–æ–ª–≥–æ? ‚è≥</b>
<b>‚óâ –ö–∞–∫–æ–π –í–∞—à –ø–ª–∞–Ω —Ä–∞–±–æ—Ç—ã? üìã</b>

¬†
üî∫üîª <b>–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ:</b> –û—Ç–≤–µ—Ç –Ω–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å <u>–æ–±—è–∑–∞—Ç–µ–ª–µ–Ω</u>! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ <b>–∫—Ä–∞—Ç–∫–æ –∏ –ø–æ–Ω—è—Ç–Ω–æ, –±–µ–∑ –æ—à–∏–±–æ–∫.</b> –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–µ –±—É–¥–µ—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∞. üîªüî∫''', parse_mode='HTML')
    bot.register_next_step_handler(message, show_summary)


# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ
def show_summary(message):
    chat_id = message.chat.id
    user_info = get_user_data(chat_id)
    user_id = message.from_user.id

    # –°–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    summary_text = f'''<b>‚ú® –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –≥–æ—Ç–æ–≤–∞ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ! ‚ú®</b>

–ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω–æ —á—Ç–æ-—Ç–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å, <b>–Ω–∞–∂–º–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –∏ –ø—Ä–æ–π–¥–∏—Ç–µ –≤—Å—ë —Å —Å–∞–º–æ–≥–æ –Ω–∞—á–∞–ª–∞. üîÑ</b>

¬†
<b>üëâ –î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ: üëá</b>'''

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏
    markup = types.InlineKeyboardMarkup()
    submit_button = types.InlineKeyboardButton(text="‚úâÔ∏è –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ üöÄ", callback_data="submit_application")
    markup.add(submit_button)

    bot.send_message(chat_id, summary_text, reply_markup=markup , parse_mode='HTML')

@bot.callback_query_handler(func=lambda call: call.data == "submit_application")
def process_application(call):
    global submitted_message_id  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
    chat_id = call.message.chat.id
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∑–∞—è–≤–∫–∏
    ready_message_id = call.message.message_id
    
    submitted_message = bot.send_message(chat_id, """<b><i>‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! üéâ
    –û–∂–∏–¥–∞–π—Ç–µ <b>.</b> . <i>.</i></i></b>""" , parse_mode='HTML')
    
    submitted_message_id = submitted_message.message_id  # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è

    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∑–∞—è–≤–∫–∏
    safe_delete_message(chat_id, ready_message_id)  # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
    time.sleep(2)
    bot.send_message(chat_id, "<b>‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è–ª –≤–∞—à—É –∑–∞—è–≤–∫—É ‚úÖ</b>", parse_mode='HTML')

    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏
    safe_delete_message(chat_id, submitted_message_id)  # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å "–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω"
    cursor.execute('UPDATE users SET is_registered = 1 WHERE chat_id = ?', (chat_id,))
    conn.commit()

    # –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –∏ —Å—Ç–∞—Ç—É—Å
    show_profile(chat_id)

    # –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é


    




# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å üë§"
@bot.message_handler(func=lambda message: message.text == "–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å üë§")
def profile_handler(message):
    chat_id = message.chat.id
    show_profile(chat_id)

def show_profile(chat_id):
    user_id = chat_id
    user_info = get_user_data(chat_id)
    name = user_info[1] if user_info[1] else '–ù–µ —É–∫–∞–∑–∞–Ω–æ'
    age = user_info[2] if user_info[2] else '–ù–µ —É–∫–∞–∑–∞–Ω–æ'
    country = user_info[3] if user_info[3] else '–ù–µ —É–∫–∞–∑–∞–Ω–æ'
    user_hash = user_info[4] if user_info[4] else '–ù–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω'

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–¥–º–∏–Ω–∞
    if user_id in ADMINS:
        status = "ADMIN"
    else:
        status = "–í–æ—Ä–∫–µ—Ä"

    profile_text = f"""<b>üåü ÍßÅ‚ùÇ‡º∫ –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å ‡ºª‚ùÇÍßÇ üåü</b>

<b>üÜî –í–∞—à ID:</b> <code>{user_id}</code>

‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

<b>üèó –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤:</b> <code>0</code>
<b>üåü –í–∞—à —Ä–∞–Ω–∫:</b> <code>0.01</code>
<b>üõ° –í–∞—à —Ö—ç—à:</b> {user_hash}
<b>‚öñÔ∏è –°—Ç–∞—Ç—É—Å:</b> <i><code>{status}</code></i>
"""

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (FULL WORK –∏–ª–∏ STOP WORK)
    work_status = get_work_status()
    print(f"–°—Ç–∞—Ç—É—Å —Ä–∞–±–æ—Ç—ã: {work_status}")  # –î–æ–±–∞–≤—å —ç—Ç–æ—Ç –≤—ã–≤–æ–¥ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏

    # –ü—É—Ç—å –∫ —Ñ–æ—Ç–æ (–∑–∞–º–µ–Ω–∏ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–æ—Ç–æ)
    photo_path = "img/131c549c-85bf-4641-b4c6-1295fb4af0f8.jpg"

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ —Å —Ç–µ–∫—Å—Ç–æ–º
    with open(photo_path, 'rb') as photo:
        bot.send_photo(chat_id, photo, caption=profile_text, reply_markup=create_main_menu(), parse_mode='HTML')
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —Ä–∞–±–æ—Ç—ã –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
    bot.send_message(chat_id, f"<b>{work_status}</b>", parse_mode='HTML')


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
def create_main_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
    btn1 = types.KeyboardButton("–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å üë§")
    btn2 = types.KeyboardButton("–ß–∞—Ç—ã üí¨")
    btn3 = types.KeyboardButton("üîó–°–æ–∑–¥–∞—Ç—å —Å—Å—ã–ª–∫—É")
    btn4 = types.KeyboardButton("–ú–∞–Ω—É–∞–ª—ã üìö")

    
    markup.add(btn1)
    markup.add(btn3)
    markup.add(btn2, btn4)
    return markup

@bot.message_handler(commands=['reset_users'])
def reset_users_command(message):
    chat_id = message.chat.id
    if chat_id in ADMINS:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
        reset_users()
        bot.send_message(chat_id, "<b><u>‚úÖ –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —É—Å–ø–µ—à–Ω–æ –∞–Ω–Ω—É–ª–∏—Ä–æ–≤–∞–Ω—ã! üîÑ</u></b>", parse_mode='HTML')
    else:
        bot.send_message(chat_id, "<b><u>‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã! üîí</u></b>", parse_mode='HTML')

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å üë§"
@bot.message_handler(func=lambda message: message.text == "–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å üë§")
def profile_handler(message):
    chat_id = message.chat.id
    show_profile(chat_id)
    

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ß–∞—Ç—ã üí¨"
@bot.message_handler(func=lambda message: message.text == "–ß–∞—Ç—ã üí¨")
def chats_handler(message):
    chat_id = message.chat.id

    # –¢–µ–∫—Å—Ç –¥–ª—è —á–∞—Ç–æ–≤
    chat_text = "<b>üîó –í–æ—Ç —Å—Å—ã–ª–∫–∏ –¥–ª—è —á–∞—Ç–æ–≤: üí¨</b>\n"

    # –°–æ–∑–¥–∞–µ–º inline-–∫–Ω–æ–ø–∫–∏ —Å —Å—Å—ã–ª–∫–∞–º–∏ –Ω–∞ —á–∞—Ç—ã
    markup = types.InlineKeyboardMarkup()
    
    chat1_button = types.InlineKeyboardButton(text=" üí¨ –ß–∞—Ç", url="https://t.me/+RSSW4Dhcges3YTUx")
    chat2_button = types.InlineKeyboardButton(text="üí∏ –í—ã–ø–ª–∞—Ç—ã", url="https://t.me/+RSSW4Dhcges3YTUx")
    
    markup.add(chat1_button, chat2_button)

    bot.send_message(chat_id, chat_text, reply_markup=markup, parse_mode='HTML')


    

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "üîó–°–æ–∑–¥–∞—Ç—å —Å—Å—ã–ª–∫—É"
@bot.message_handler(func=lambda message: message.text == "<b>üîó–°–æ–∑–¥–∞—Ç—å —Å—Å—ã–ª–∫—É</b>")
def create_promo_code_handler(message):
    chat_id = message.chat.id
    user_info = get_user_data(chat_id)
    referral_link = user_info[6]  # –ü–æ–ª—É—á–∞–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É
    bot.send_message(chat_id, f"<b><u>üåü –í–æ—Ç –≤–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:<code>{referral_link}</code></u></b>", parse_mode='HTML')


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ú–∞–Ω—É–∞–ª—ã üìö"
@bot.message_handler(func=lambda message: message.text == "–ú–∞–Ω—É–∞–ª—ã üìö")
def chats_handler(message):
    chat_id = message.chat.id

    # –¢–µ–∫—Å—Ç –¥–ª—è —á–∞—Ç–æ–≤
    chat_text = "<b>üìö –í–æ—Ç –∫–∞–Ω–∞–ª —Å –º–∞–Ω—É–∞–ª–∞–º–∏:\n</b>"

    # –°–æ–∑–¥–∞–µ–º inline-–∫–Ω–æ–ø–∫–∏ —Å —Å—Å—ã–ª–∫–∞–º–∏ –Ω–∞ —á–∞—Ç—ã
    markup = types.InlineKeyboardMarkup()
    
    chat1_button = types.InlineKeyboardButton(text="üìñ –ú–∞–Ω—É–∞–ª", url="https://t.me/+OBWZtY7qCFdmNjNh")
    markup.add(chat1_button)

    bot.send_message(chat_id, chat_text, reply_markup=markup, parse_mode='HTML')

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "üë©‚Äçüè´–ù–∞—Å—Ç–∞–≤–Ω–∏–∫–∏"
@bot.message_handler(func=lambda message: message.text == "üë©‚Äçüè´–ù–∞—Å—Ç–∞–≤–Ω–∏–∫–∏")
def chats_handler(message):
    chat_id = message.chat.id

    # –¢–µ–∫—Å—Ç –¥–ª—è —á–∞—Ç–æ–≤
    chat_text = "<b>üåü –í—ã–±–µ—Ä–∏ —Å–µ–±–µ —Å–≤–æ–µ–≥–æ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞:</b>\n"

    # –°–æ–∑–¥–∞–µ–º inline-–∫–Ω–æ–ø–∫–∏ —Å —Å—Å—ã–ª–∫–∞–º–∏ –Ω–∞ —á–∞—Ç—ã
    markup = types.InlineKeyboardMarkup()
    
    chat1_button = types.InlineKeyboardButton(text=" –î–º–∏—Ç—Ä–∏–π", url="https://t.me/Dimchik2006")
    chat2_button = types.InlineKeyboardButton(text="–î–∞–Ω–∏–∏–ª", url="https://t.me/qalfooe")
    
    markup.add(chat1_button)
    markup.add(chat2_button)

    bot.send_message(chat_id, chat_text, reply_markup=markup, parse_mode='HTML')

# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
bot.polling(none_stop=True)